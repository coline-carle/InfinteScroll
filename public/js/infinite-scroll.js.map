{"version":3,"sources":["src/infinite-scroll.js"],"names":["InfinteScroll","loadMoreFunc","heightFactor","minThrottleMsec","window","addEventListener","handler","e","pageYOffset","document","documentElement","clientHeight","body","scrollHeight","Math","max","bodyHeight","scrollTop","windowHeight","distFromBottom","call","defaultHandler","min_throttle_msec"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;AACnB,yBAAYC,YAAZ,EAAqE;AAAA;;AAAA,QAA3CC,YAA2C,uEAA5B,GAA4B;AAAA,QAAvBC,eAAuB,uEAAL,GAAK;;AAAA;;AACnE,SAAKA,eAAL,GAAuBA,eAAvB;AACA,SAAKD,YAAL,GAAoBA,YAApB;;AAEA,SAAKD,YAAL,GAAoBA,YAApB;AACAG,WAAOC,gBAAP,CAAwB,QAAxB,EAAkC;AAAA,aAAK,MAAKC,OAAL,CAAaC,CAAb,CAAL;AAAA,KAAlC;AACD;;;;gCAEW;AACV,aAAOH,OAAOI,WAAd;AACD;;;mCAEc;AACb,aAAOC,SAASC,eAAT,CAAyBC,YAAhC;AACD;;;iCAEY;AACX,aAAOF,SAASG,IAAT,CAAcC,YAArB;AACD;;;qCAEgB;AACf,aAAOC,KAAKC,GAAL,CAAS,KAAKC,UAAL,MAAqB,KAAKC,SAAL,KAAmB,KAAKC,YAAL,EAAxC,CAAT,CAAP;AACD;;;qCAEgB;AACf,UAAI,KAAKC,cAAL,KAAwB,KAAKD,YAAL,KAAsB,KAAKhB,YAAvD,EAAqE;AACnE,aAAKD,YAAL,CAAkBmB,IAAlB;AACD;AACF;;;8BAES;AACR,aAAO,wBAAW,KAAKC,cAAhB,EAAgC,KAAKC,iBAArC,CAAP;AACD;;;;;;kBAjCkBtB,a","file":"public/js/infinite-scroll.js","sourcesContent":["import _ from 'lodash';\n\nexport default class InfinteScroll {\n  constructor(loadMoreFunc, heightFactor = 0.1, minThrottleMsec = 100) {\n    this.minThrottleMsec = minThrottleMsec;\n    this.heightFactor = heightFactor;\n\n    this.loadMoreFunc = loadMoreFunc;\n    window.addEventListener('scroll', e => this.handler(e));\n  }\n\n  scrollTop() {\n    return window.pageYOffset;\n  }\n\n  windowHeight() {\n    return document.documentElement.clientHeight;\n  }\n\n  bodyHeight() {\n    return document.body.scrollHeight;\n  }\n\n  distFromBottom() {\n    return Math.max(this.bodyHeight() - (this.scrollTop() + this.windowHeight()));\n  }\n\n  defaultHandler() {\n    if (this.distFromBottom() < this.windowHeight() * this.heightFactor) {\n      this.loadMoreFunc.call();\n    }\n  }\n\n  handler() {\n    return _.throttle(this.defaultHandler, this.min_throttle_msec);\n  }\n}\n"]}